{"ast":null,"code":"export function scoreCal(target, who) {\n  let totalScore = 0;\n  let NumberA = 0;\n  let dealerOpenCard = 0;\n  if (who === \"DEALER\") {\n    for (let i = 0; i < target.length; i++) {\n      switch (target[i].card) {\n        case 'J':\n          if (i === 0) {\n            dealerOpenCard = 10;\n            totalScore = totalScore + 10;\n          } else {\n            totalScore = totalScore + 10;\n          }\n          break;\n        case 'Q':\n          if (i === 0) {\n            dealerOpenCard = 10;\n            totalScore = totalScore + 10;\n          } else {\n            totalScore = totalScore + 10;\n          }\n          break;\n        case 'K':\n          if (i === 0) {\n            dealerOpenCard = 10;\n            totalScore = totalScore + 10;\n          } else {\n            totalScore = totalScore + 10;\n          }\n          break;\n        case 'A':\n          if (i === 0) {\n            dealerOpenCard = 11;\n            totalScore = totalScore + 11;\n          } else {\n            totalScore = totalScore + 11;\n          }\n          break;\n        default:\n          if (i === 0) {\n            dealerOpenCard = target[i].card;\n            totalScore = totalScore + target[i].card;\n          } else {\n            totalScore = totalScore + target[i].card;\n          }\n          break;\n      }\n    }\n  } else {\n    for (let i = 0; i < target.length; i++) {\n      switch (target[i].card) {\n        case 'J':\n          totalScore = totalScore + 10;\n          break;\n        case 'Q':\n          totalScore = totalScore + 10;\n          break;\n        case 'K':\n          totalScore = totalScore + 10;\n          break;\n        case 'A':\n          NumberA = NumberA + 1;\n          break;\n        default:\n          totalScore = totalScore + target[i].card;\n          break;\n      }\n    }\n    switch (NumberA) {\n      case 0:\n        break;\n      case 1:\n        if (totalScore <= 10) {\n          totalScore = totalScore + 11;\n        } else {\n          totalScore = totalScore + 1;\n        }\n        break;\n      case 2:\n        if (totalScore <= 9) {\n          totalScore = totalScore + 12;\n        } else {\n          totalScore = totalScore + 2;\n        }\n        break;\n      case 3:\n        if (totalScore <= 8) {\n          totalScore = totalScore + 13;\n        } else {\n          totalScore = totalScore + 3;\n        }\n        break;\n      case 4:\n        if (totalScore <= 7) {\n          totalScore = totalScore + 14;\n        } else {\n          totalScore = totalScore + 4;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  return [totalScore, dealerOpenCard];\n}","map":{"version":3,"names":["scoreCal","target","who","totalScore","NumberA","dealerOpenCard","i","length","card"],"sources":["/Users/dongha/Desktop/새로운 깃/depoly_blackjack/src/function/scoreCal.js"],"sourcesContent":["\nexport function scoreCal(target, who) {\n    let totalScore = 0 ;\n    let NumberA = 0;\n    let dealerOpenCard = 0 ;\n    \n    if(who === \"DEALER\"){\n        for(let i = 0 ; i < target.length; i ++ ){\n            switch(target[i].card){\n                case 'J':\n                    if(i === 0){\n                        dealerOpenCard = 10;\n                        totalScore = totalScore + 10\n                    }else{\n                        totalScore = totalScore + 10\n                    }\n                    break\n                case 'Q':\n                    if(i === 0){\n                        dealerOpenCard = 10\n                        totalScore = totalScore + 10\n                    }else{\n                        totalScore = totalScore + 10\n                    }\n                    break\n                case 'K':\n                    if(i === 0){\n                        dealerOpenCard = 10\n                        totalScore = totalScore + 10\n                    }else{\n                        totalScore = totalScore + 10\n                        }\n                    break\n                case 'A':\n                    if(i === 0){\n                        dealerOpenCard = 11\n                        totalScore = totalScore + 11\n                    }else{\n                        totalScore = totalScore + 11\n                    } \n                    break\n                default:\n                    if(i === 0){\n                        dealerOpenCard = target[i].card\n                        totalScore = totalScore + target[i].card\n                    }else{\n                        totalScore = totalScore + target[i].card\n                    } \n                    break\n    \n            }\n    \n        }\n    }else{\n        for(let i = 0 ; i < target.length; i ++ ){\n      \n            switch(target[i].card){\n                case 'J':\n                    totalScore = totalScore + 10\n                    break\n                case 'Q':\n                    totalScore = totalScore + 10\n                    break\n                case 'K':\n                    totalScore = totalScore + 10\n                    break\n                case 'A':\n                    NumberA = NumberA + 1  \n                    break\n                default:\n                    totalScore = totalScore + target[i].card\n                    break\n    \n            }\n        }\n\n        switch(NumberA){\n            case 0:\n                break\n            case 1:\n                if(totalScore <= 10){\n                    totalScore = totalScore + 11\n                }else{\n                    totalScore = totalScore + 1\n                }\n                break\n            case 2:\n                if(totalScore <= 9){\n                    totalScore = totalScore + 12\n                }else{\n                    totalScore = totalScore + 2\n                }\n                break\n            case 3:\n                if(totalScore <= 8){\n                    totalScore = totalScore + 13\n                }else{\n                    totalScore = totalScore + 3\n                }\n                break\n            case 4:\n                if(totalScore <= 7){\n                    totalScore = totalScore + 14\n                }else{\n                    totalScore = totalScore + 4\n                } \n                break\n            default:\n                break\n\n        }\n\n    \n    }\n    \n\n    return  [totalScore, dealerOpenCard]\n    \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}