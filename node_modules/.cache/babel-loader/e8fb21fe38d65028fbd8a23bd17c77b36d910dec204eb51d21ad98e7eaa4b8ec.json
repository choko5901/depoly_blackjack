{"ast":null,"code":"var _jsxFileName = \"/Users/dongha/Desktop/\\u1109\\u1162\\u1105\\u1169\\u110B\\u116E\\u11AB \\u1100\\u1175\\u11BA/depoly_blackjack/src/component/dealer.js\",\n  _s = $RefreshSig$();\nimport React, { memo, useEffect, useMemo, useState } from 'react';\nimport \"../css/dealer.css\";\nimport { useDispatch } from 'react-redux';\nimport { cards } from '../function/initShuffle';\nimport { initCardDeck } from '../slice/cardSlice';\nimport { scoreCal } from '../function/scoreCal';\nimport { dealerFinalScore } from '../slice/scoreSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dealer = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(_ref => {\n  _s();\n  let {\n    dealerOpen\n  } = _ref;\n  const firstCard = useMemo(() => cards(), []);\n  const dispatch = useDispatch();\n  const [dealerScore, setdealerScore] = useState(scoreCal(firstCard.slice(0, 2), \"DEALER\")[0]);\n  const openScore = useMemo(() => scoreCal(firstCard.slice(0, 2), \"DEALER\")[1], [firstCard]);\n  const [initDealerCard, setInitDealerCard] = useState([{\n    mark: \"\",\n    card: 0\n  }]);\n  useEffect(() => {\n    if (dealerScore >= 17) {\n      dispatch(initCardDeck(firstCard.slice(2)));\n      setInitDealerCard(firstCard.slice(0, 2));\n      dispatch(dealerFinalScore(dealerScore));\n    } else {\n      dispatch(initCardDeck(firstCard.slice(3)));\n      setInitDealerCard(firstCard.slice(0, 3));\n      setdealerScore(scoreCal(firstCard.slice(0, 3), \"DEALER\")[0]);\n      dispatch(dealerFinalScore(scoreCal(firstCard.slice(0, 3), \"DEALER\")[0]));\n    }\n    // eslint-disable-next-line\n  }, [dispatch, firstCard]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dealerOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAC8C\\uC784 \\uC9C4\\uD589\\uC911 ..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uB51C\\uB7EC \\uC810\\uC218 : \", openScore, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dealerBoxWapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dealerBox\",\n          children: [\"\\uC624\\uD508\\uB41C \\uCE74\\uB4DC\\uB294: \", initDealerCard[0].mark + initDealerCard[0].card]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uB51C\\uB7EC \\uC810\\uC218 : \", dealerScore, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dealerBoxWapper\",\n        children: Array(initDealerCard.length).fill().map((v, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dealerBox\",\n          children: [\"\\uB51C\\uB7EC \\uBCF4\\uC720 \", i + 1, \"\\uBC88 \\uCE74\\uB4DC\\uB294: \", initDealerCard[i].mark + initDealerCard[i].card]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}, \"WQlrnwkpqQupnTXasJtinlAHsEE=\", false, function () {\n  return [useDispatch];\n})), \"WQlrnwkpqQupnTXasJtinlAHsEE=\", false, function () {\n  return [useDispatch];\n});\n_c2 = Dealer;\nexport default Dealer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Dealer$memo\");\n$RefreshReg$(_c2, \"Dealer\");","map":{"version":3,"names":["React","memo","useEffect","useMemo","useState","useDispatch","cards","initCardDeck","scoreCal","dealerFinalScore","jsxDEV","_jsxDEV","Fragment","_Fragment","Dealer","_s","_c","_ref","dealerOpen","firstCard","dispatch","dealerScore","setdealerScore","slice","openScore","initDealerCard","setInitDealerCard","mark","card","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Array","length","fill","map","v","i","_c2","$RefreshReg$"],"sources":["/Users/dongha/Desktop/새로운 깃/depoly_blackjack/src/component/dealer.js"],"sourcesContent":["import React, {memo, useEffect, useMemo, useState} from 'react'\nimport \"../css/dealer.css\"\nimport { useDispatch} from 'react-redux'\nimport {cards} from '../function/initShuffle'\nimport {initCardDeck} from '../slice/cardSlice'\nimport {scoreCal} from '../function/scoreCal'\nimport {dealerFinalScore} from '../slice/scoreSlice'\n\n\nconst Dealer= memo(({dealerOpen})=>{\n\n    const firstCard = useMemo(()=> cards(),[])\n    const dispatch = useDispatch();\n\n    const [dealerScore , setdealerScore] = useState(scoreCal(firstCard.slice(0,2),\"DEALER\")[0])\n    const openScore = useMemo(()=> scoreCal(firstCard.slice(0,2),\"DEALER\")[1],[firstCard])\n\n\n\n    const [initDealerCard, setInitDealerCard] = useState([{\n        mark : \"\",\n        card : 0,\n    }])\n\n    useEffect(()=>{\n        if(dealerScore >= 17){\n            dispatch(initCardDeck(firstCard.slice(2)))\n            setInitDealerCard(firstCard.slice(0,2))\n            dispatch(dealerFinalScore(dealerScore))\n        }else{\n            dispatch(initCardDeck(firstCard.slice(3)))\n            setInitDealerCard(firstCard.slice(0,3))\n            setdealerScore(scoreCal(firstCard.slice(0,3),\"DEALER\")[0])\n            dispatch(dealerFinalScore(scoreCal(firstCard.slice(0,3),\"DEALER\")[0]))\n        }\n        // eslint-disable-next-line\n    },[dispatch , firstCard])\n\n\n    return( \n        <>\n        \n            { dealerOpen ?\n            <>\n                <h2>게임 진행중 ..</h2>\n                <h2>딜러 점수 : {openScore} </h2>\n                <div className='dealerBoxWapper'>\n                    <div className='dealerBox'>\n                        오픈된 카드는: {initDealerCard[0].mark + initDealerCard[0].card}\n                    </div>\n                </div>\n            </>\n                :\n            <>\n                <h2>딜러 점수 : {dealerScore} </h2>\n                <div className='dealerBoxWapper'>\n                    { Array(initDealerCard.length).fill().map((v,i) => (\n                    <div className='dealerBox' key={i}>\n                        딜러 보유 {i+1}번 카드는: {initDealerCard[i].mark + initDealerCard[i].card}\n                    </div>\n                    ))}\n                </div>\n            </>\n\n            }\n            \n        </>\n    )\n\n})\n\n\nexport default Dealer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}